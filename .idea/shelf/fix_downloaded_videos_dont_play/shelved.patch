Index: app/src/main/java/marabillas/loremar/lmvideodownloader/download_feature/DownloadsCompleted.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>/*\n *     LM videodownloader is a browser app for android, made to easily\n *     download videos.\n *     Copyright (C) 2018 Loremar Marabillas\n *\n *     This program is free software; you can redistribute it and/or modify\n *     it under the terms of the GNU General Public License as published by\n *     the Free Software Foundation; either version 2 of the License, or\n *     (at your option) any later version.\n *\n *     This program is distributed in the hope that it will be useful,\n *     but WITHOUT ANY WARRANTY; without even the implied warranty of\n *     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n *     GNU General Public License for more details.\n *\n *     You should have received a copy of the GNU General Public License along\n *     with this program; if not, write to the Free Software Foundation, Inc.,\n *     51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.\n */\n\npackage marabillas.loremar.lmvideodownloader.download_feature;\n\nimport android.app.AlertDialog;\nimport android.app.DownloadManager;\nimport android.content.DialogInterface;\nimport android.content.Intent;\nimport android.graphics.Rect;\nimport android.net.Uri;\nimport android.os.Bundle;\nimport android.os.Environment;\nimport android.support.annotation.NonNull;\nimport android.support.annotation.Nullable;\nimport android.support.v4.content.FileProvider;\nimport android.support.v7.widget.DividerItemDecoration;\nimport android.support.v7.widget.LinearLayoutManager;\nimport android.support.v7.widget.RecyclerView;\nimport android.text.format.Formatter;\nimport android.util.TypedValue;\nimport android.view.LayoutInflater;\nimport android.view.View;\nimport android.view.ViewGroup;\nimport android.view.ViewTreeObserver;\nimport android.widget.ImageView;\nimport android.widget.TextView;\nimport android.widget.Toast;\n\nimport java.io.File;\nimport java.io.FileInputStream;\nimport java.io.FileNotFoundException;\nimport java.io.IOException;\nimport java.io.ObjectInputStream;\nimport java.util.ArrayList;\nimport java.util.List;\n\nimport marabillas.loremar.lmvideodownloader.LMvdFragment;\nimport marabillas.loremar.lmvideodownloader.R;\nimport marabillas.loremar.lmvideodownloader.RenameDialog;\n\npublic class DownloadsCompleted extends LMvdFragment implements DownloadsInProgress.OnAddDownloadedVideoToCompletedListener {\n    private RecyclerView downloadsList;\n    private List<String> videos;\n    private CompletedVideos completedVideos;\n\n    private OnNumDownloadsCompletedChangeListener onNumDownloadsCompletedChangeListener;\n\n    public interface OnNumDownloadsCompletedChangeListener {\n        void onNumDownloadsCompletedChange();\n    }\n\n    public void setOnNumDownloadsCompletedChangeListener(OnNumDownloadsCompletedChangeListener\n                                                                 onNumDownloadsCompletedChangeListener) {\n        this.onNumDownloadsCompletedChangeListener = onNumDownloadsCompletedChangeListener;\n    }\n\n    public int getNumDownloadsCompleted() {\n        return videos.size();\n    }\n\n    @Nullable\n    @Override\n    public View onCreateView(LayoutInflater inflater, @Nullable ViewGroup container, Bundle savedInstanceState) {\n        View view = inflater.inflate(R.layout.downloads_completed, container, false);\n\n        downloadsList = view.findViewById(R.id.downloadsCompletedList);\n        TextView clearAllFinishedButton = view.findViewById(R.id.clearAllFinishedButton);\n        TextView goToFolderButton = view.findViewById(R.id.goToFolder);\n\n        videos = new ArrayList<>();\n        File file = new File(getActivity().getFilesDir(), \"completed.dat\");\n        if (file.exists()) {\n            try {\n                FileInputStream fileInputStream = new FileInputStream(file);\n                ObjectInputStream objectInputStream = new ObjectInputStream(fileInputStream);\n                completedVideos = (CompletedVideos) objectInputStream.readObject();\n                videos = completedVideos.getVideos();\n                objectInputStream.close();\n                fileInputStream.close();\n                List<String> nonExistentFiles = new ArrayList<>();\n                for (String video : videos) {\n                    File videoFile = new File(Environment.getExternalStoragePublicDirectory\n                            (Environment.DIRECTORY_DOWNLOADS), video);\n                    if (!videoFile.exists()) {\n                        nonExistentFiles.add(video);\n                    }\n                }\n                for (String nonExistentVideo : nonExistentFiles) {\n                    videos.remove(nonExistentVideo);\n                }\n            } catch (FileNotFoundException e) {\n                e.printStackTrace();\n            } catch (IOException e) {\n                e.printStackTrace();\n            } catch (ClassNotFoundException e) {\n                e.printStackTrace();\n            }\n        }\n\n        downloadsList.setAdapter(new DownloadedVideoAdapter());\n        downloadsList.setLayoutManager(new LinearLayoutManager(getActivity()));\n        downloadsList.setHasFixedSize(true);\n        DividerItemDecoration divider = new DividerItemDecoration(getActivity(),\n                DividerItemDecoration.VERTICAL) {\n            @Override\n            public void getItemOffsets(Rect outRect, View view, RecyclerView parent, RecyclerView\n                    .State state) {\n                int verticalSpacing = (int) Math.ceil(TypedValue.applyDimension(TypedValue\n                        .COMPLEX_UNIT_SP, 4, getActivity().getResources()\n                        .getDisplayMetrics()));\n                outRect.top = verticalSpacing;\n                outRect.bottom = verticalSpacing;\n            }\n        };\n        divider.setDrawable(getActivity().getResources().getDrawable(R.drawable.greydivider));\n        downloadsList.addItemDecoration(divider);\n\n        clearAllFinishedButton.setOnClickListener(new View.OnClickListener() {\n            @Override\n            public void onClick(View v) {\n                new AlertDialog.Builder(getActivity())\n                        .setMessage(\"Clear this list?\")\n                        .setPositiveButton(\"Yes\", new DialogInterface.OnClickListener() {\n                            @Override\n                            public void onClick(DialogInterface dialog, int which) {\n                                int length = videos.size();\n                                videos.clear();\n                                if (completedVideos != null) {\n                                    completedVideos.save(getActivity());\n                                }\n                                downloadsList.getAdapter().notifyItemRangeRemoved(0, length);\n                                onNumDownloadsCompletedChangeListener.onNumDownloadsCompletedChange();\n                            }\n                        })\n                        .setNegativeButton(\"No\", new DialogInterface.OnClickListener() {\n                            @Override\n                            public void onClick(DialogInterface dialog, int which) {\n\n                            }\n                        })\n                        .create()\n                        .show();\n            }\n        });\n\n        goToFolderButton.setOnClickListener(new View.OnClickListener() {\n            @Override\n            public void onClick(View v) {\n                Intent intent = new Intent(DownloadManager.ACTION_VIEW_DOWNLOADS);\n                startActivity(intent);\n            }\n        });\n\n        onNumDownloadsCompletedChangeListener.onNumDownloadsCompletedChange();\n\n        return view;\n    }\n\n    @Override\n    public void onAddDownloadedVideoToCompleted(final String name, final String type) {\n        if (completedVideos == null) {\n            completedVideos = new CompletedVideos();\n        }\n        completedVideos.addVideo(getActivity(), name + \".\" + type);\n        videos = completedVideos.getVideos();\n        downloadsList.getAdapter().notifyItemInserted(0);\n        onNumDownloadsCompletedChangeListener.onNumDownloadsCompletedChange();\n    }\n\n    private class DownloadedVideoAdapter extends RecyclerView.Adapter<VideoItem> {\n\n        @NonNull\n        @Override\n        public VideoItem onCreateViewHolder(@NonNull ViewGroup parent, int viewType) {\n            LayoutInflater inflater = LayoutInflater.from(getActivity());\n            View view = inflater.inflate(R.layout.downloads_completed_item, parent, false);\n            return new VideoItem(view);\n        }\n\n        @Override\n        public void onBindViewHolder(@NonNull VideoItem holder, int position) {\n            holder.bind(videos.get(position));\n        }\n\n        @Override\n        public int getItemCount() {\n            return videos.size();\n        }\n    }\n\n    private class VideoItem extends RecyclerView.ViewHolder implements ViewTreeObserver.OnGlobalLayoutListener {\n        private TextView name;\n        private TextView ext;\n        private ImageView delete;\n        private ImageView rename;\n        private TextView size;\n        private TextView play;\n\n        private String baseName;\n        private String type;\n\n        private boolean adjustedlayout;\n\n        VideoItem(View itemView) {\n            super(itemView);\n            name = itemView.findViewById(R.id.downloadCompletedName);\n            ext = itemView.findViewById(R.id.downloadCompletedExt);\n            delete = itemView.findViewById(R.id.deleteDownloadCompletedItem);\n            rename = itemView.findViewById(R.id.renameDownloadCompletedVideo);\n            size = itemView.findViewById(R.id.downloadCompletedSize);\n            play = itemView.findViewById(R.id.playVideo);\n\n            itemView.getViewTreeObserver().addOnGlobalLayoutListener(this);\n            ext.getViewTreeObserver().addOnGlobalLayoutListener(this);\n            rename.getViewTreeObserver().addOnGlobalLayoutListener(this);\n            delete.getViewTreeObserver().addOnGlobalLayoutListener(this);\n            adjustedlayout = false;\n\n            delete.setOnClickListener(new View.OnClickListener() {\n                @Override\n                public void onClick(View v) {\n                    new AlertDialog.Builder(getActivity())\n                            .setMessage(\"Delete?\")\n                            .setPositiveButton(\"Yes\", new DialogInterface.OnClickListener() {\n                                @Override\n                                public void onClick(DialogInterface dialog, int which) {\n                                    int position = getAdapterPosition();\n                                    videos.remove(position);\n                                    completedVideos.save(getActivity());\n                                    downloadsList.getAdapter().notifyItemRemoved(position);\n                                    onNumDownloadsCompletedChangeListener.onNumDownloadsCompletedChange();\n                                }\n                            })\n                            .setNegativeButton(\"No\", new DialogInterface.OnClickListener() {\n                                @Override\n                                public void onClick(DialogInterface dialog, int which) {\n\n                                }\n                            })\n                            .create()\n                            .show();\n                }\n            });\n\n            rename.setOnClickListener(new View.OnClickListener() {\n                @Override\n                public void onClick(View v) {\n                    new RenameDialog(getActivity(), baseName) {\n                        @Override\n                        public void onOK(String newName) {\n                            File downloadsFolder = Environment.getExternalStoragePublicDirectory\n                                    (Environment.DIRECTORY_DOWNLOADS);\n                            File renamedFile = new File(downloadsFolder, newName + \".\" + type);\n                            File file = new File(downloadsFolder, baseName + \".\" + type);\n                            if (file.renameTo(renamedFile)) {\n                                videos.set(getAdapterPosition(), newName + \".\" + type);\n                                completedVideos.save(getActivity());\n                                downloadsList.getAdapter().notifyItemChanged(getAdapterPosition());\n                            } else {\n                                Toast.makeText(getActivity(), \"Failed: Invalid Filename\", Toast\n                                        .LENGTH_SHORT).show();\n                            }\n                        }\n                    };\n                }\n            });\n\n            play.setOnClickListener(new View.OnClickListener() {\n                @Override\n                public void onClick(View v) {\n                    Intent intent = new Intent(Intent.ACTION_VIEW);\n                    File file = new File(Environment.getExternalStoragePublicDirectory\n                            (Environment.DIRECTORY_DOWNLOADS), baseName + \".\" + type);\n                    Uri fileUri = FileProvider.getUriForFile(getActivity(), \"marabillas.loremar\" +\n                            \".lmvideodownloader.fileprovider\", file);\n                    intent.setDataAndType(fileUri, \"video/*\");\n                    intent.addFlags(Intent.FLAG_GRANT_READ_URI_PERMISSION);\n                    startActivity(intent);\n                }\n            });\n        }\n\n        void bind(String video) {\n            baseName = video.substring(0, video.lastIndexOf(\".\"));\n            type = video.substring(video.lastIndexOf(\".\") + 1, video.length());\n            name.setText(baseName);\n            ext.setText(type);\n            File file = new File(Environment.getExternalStoragePublicDirectory(Environment\n                    .DIRECTORY_DOWNLOADS), video);\n            if (file.exists()) {\n                String length = Formatter.formatFileSize(getActivity(), file.length());\n                size.setText(length);\n            } else {\n                int position = getAdapterPosition();\n                videos.remove(position);\n                completedVideos.save(getActivity());\n                downloadsList.getAdapter().notifyItemRemoved(position);\n                onNumDownloadsCompletedChangeListener.onNumDownloadsCompletedChange();\n            }\n        }\n\n        @Override\n        public void onGlobalLayout() {\n            if (!adjustedlayout) {\n                if (itemView.getWidth() != 0 && ext.getWidth() != 0 && rename.getWidth() != 0 && delete\n                        .getWidth() != 0) {\n                    int totalMargin = (int) TypedValue.applyDimension(TypedValue\n                                    .COMPLEX_UNIT_DIP, 35,\n                            getActivity().getResources().getDisplayMetrics());\n                    int nameMaxWidth = itemView.getMeasuredWidth() - totalMargin - ext\n                            .getMeasuredWidth() - rename.getMeasuredWidth() - delete\n                            .getMeasuredWidth();\n                    name.setMaxWidth(nameMaxWidth);\n                    adjustedlayout = true;\n                }\n            }\n        }\n    }\n}\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/marabillas/loremar/lmvideodownloader/download_feature/DownloadsCompleted.java	(date 1525160081000)
+++ app/src/main/java/marabillas/loremar/lmvideodownloader/download_feature/DownloadsCompleted.java	(date 1525418904000)
@@ -26,6 +26,7 @@
 import android.content.Intent;
 import android.graphics.Rect;
 import android.net.Uri;
+import android.os.Build;
 import android.os.Bundle;
 import android.os.Environment;
 import android.support.annotation.NonNull;
@@ -289,9 +290,13 @@
                     Intent intent = new Intent(Intent.ACTION_VIEW);
                     File file = new File(Environment.getExternalStoragePublicDirectory
                             (Environment.DIRECTORY_DOWNLOADS), baseName + "." + type);
-                    Uri fileUri = FileProvider.getUriForFile(getActivity(), "marabillas.loremar" +
-                            ".lmvideodownloader.fileprovider", file);
-                    intent.setDataAndType(fileUri, "video/*");
+                    if (Build.VERSION.SDK_INT > Build.VERSION_CODES.LOLLIPOP_MR1) {
+                        Uri fileUri = FileProvider.getUriForFile(getActivity(), "marabillas.loremar" +
+                                ".lmvideodownloader.fileprovider", file);
+                        intent.setDataAndType(fileUri, "video/*");
+                    } else {
+                        intent.setDataAndType(Uri.fromFile(file), "video/*");
+                    }
                     intent.addFlags(Intent.FLAG_GRANT_READ_URI_PERMISSION);
                     startActivity(intent);
                 }
